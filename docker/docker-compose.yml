version: '3.8'

services:
  # Traefik - Reverse Proxy
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
    networks:
      - ml-net
    labels:
      - "traefik.enable=true"

  # Netdata - System Monitoring
  netdata:
    image: netdata/netdata:latest
    container_name: netdata
    restart: unless-stopped
    hostname: ml-train-server
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/os-release:/host/etc/os-release:ro
    environment:
      - DOCKER_HOST=/var/run/docker.sock
    ports:
      - "19999:19999"
    networks:
      - ml-net
    labels:
      - "traefik.enable=true"

  # Prometheus - Metrics Backend
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - ml-net
    labels:
      - "traefik.enable=true"

  # Grafana - Metrics Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    networks:
      - ml-net
    depends_on:
      - prometheus
    labels:
      - "traefik.enable=true"

  # Node Exporter - System Metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - "9100:9100"
    networks:
      - ml-net

  # cAdvisor - Container Metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    privileged: true
    devices:
      - /dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8085:8080"
    networks:
      - ml-net

  # NVIDIA GPU Exporter
  nvidia-gpu-exporter:
    image: nvidia/dcgm-exporter:latest
    container_name: nvidia-gpu-exporter
    restart: unless-stopped
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    ports:
      - "9400:9400"
    networks:
      - ml-net
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # Dozzle - Container Log Viewer
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "8082:8080"
    environment:
      - DOZZLE_LEVEL=info
      - DOZZLE_TAILSIZE=300
      - DOZZLE_FILTER=status=running
    networks:
      - ml-net
    labels:
      - "traefik.enable=true"

  # Portainer - Container Management
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer-data:/data
    ports:
      - "9000:9000"
    networks:
      - ml-net
    labels:
      - "traefik.enable=true"

  # FileBrowser - File Management
  filebrowser:
    image: filebrowser/filebrowser:latest
    container_name: filebrowser
    restart: unless-stopped
    volumes:
      - /mnt/storage:/srv
      - filebrowser-data:/database
    ports:
      - "8081:80"
    environment:
      - FB_NOAUTH=false
    networks:
      - ml-net
    labels:
      - "traefik.enable=true"

  # Shared TensorBoard
  tensorboard:
    image: tensorflow/tensorflow:latest
    container_name: tensorboard
    restart: unless-stopped
    command: tensorboard --logdir=/logs --bind_all --port=6006
    volumes:
      - /mnt/storage/shared/tensorboard:/logs:ro
    ports:
      - "6006:6006"
    networks:
      - ml-net
    labels:
      - "traefik.enable=true"

  # Guacamole - Browser-based Remote Desktop
  guacamole-db:
    image: postgres:15
    container_name: guacamole-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: guacamole_db
      POSTGRES_USER: guacamole_user
      POSTGRES_PASSWORD: ${GUACAMOLE_DB_PASSWORD:-changeMe123}
    volumes:
      - guacamole-db-data:/var/lib/postgresql/data
      - ./guacamole/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql:ro
    networks:
      - ml-net

  guacd:
    image: guacamole/guacd:latest
    container_name: guacd
    restart: unless-stopped
    networks:
      - ml-net

  guacamole:
    image: guacamole/guacamole:latest
    container_name: guacamole
    restart: unless-stopped
    environment:
      GUACD_HOSTNAME: guacd
      POSTGRES_HOSTNAME: guacamole-db
      POSTGRES_DATABASE: guacamole_db
      POSTGRES_USER: guacamole_user
      POSTGRES_PASSWORD: ${GUACAMOLE_DB_PASSWORD:-changeMe123}
    ports:
      - "8080:8080"
    networks:
      - ml-net
    depends_on:
      - guacamole-db
      - guacd
    labels:
      - "traefik.enable=true"

  # Code-server instances (one per user)
  code-server-alice:
    image: codercom/code-server:latest
    container_name: code-server-alice
    restart: unless-stopped
    user: "1000:1000"
    environment:
      - PASSWORD=${CODESERVER_PASSWORD:-changeme}
    volumes:
      - /mnt/storage/homes/alice:/home/coder
      - /mnt/storage/workspaces/alice:/workspace
    ports:
      - "8443:8080"
    networks:
      - ml-net
    labels:
      - "traefik.enable=true"

  code-server-bob:
    image: codercom/code-server:latest
    container_name: code-server-bob
    restart: unless-stopped
    user: "1001:1001"
    environment:
      - PASSWORD=${CODESERVER_PASSWORD:-changeme}
    volumes:
      - /mnt/storage/homes/bob:/home/coder
      - /mnt/storage/workspaces/bob:/workspace
    ports:
      - "8444:8080"
    networks:
      - ml-net
    labels:
      - "traefik.enable=true"

  code-server-charlie:
    image: codercom/code-server:latest
    container_name: code-server-charlie
    restart: unless-stopped
    user: "1002:1002"
    environment:
      - PASSWORD=${CODESERVER_PASSWORD:-changeme}
    volumes:
      - /mnt/storage/homes/charlie:/home/coder
      - /mnt/storage/workspaces/charlie:/workspace
    ports:
      - "8445:8080"
    networks:
      - ml-net
    labels:
      - "traefik.enable=true"

  code-server-dave:
    image: codercom/code-server:latest
    container_name: code-server-dave
    restart: unless-stopped
    user: "1003:1003"
    environment:
      - PASSWORD=${CODESERVER_PASSWORD:-changeme}
    volumes:
      - /mnt/storage/homes/dave:/home/coder
      - /mnt/storage/workspaces/dave:/workspace
    ports:
      - "8446:8080"
    networks:
      - ml-net
    labels:
      - "traefik.enable=true"

  code-server-eve:
    image: codercom/code-server:latest
    container_name: code-server-eve
    restart: unless-stopped
    user: "1004:1004"
    environment:
      - PASSWORD=${CODESERVER_PASSWORD:-changeme}
    volumes:
      - /mnt/storage/homes/eve:/home/coder
      - /mnt/storage/workspaces/eve:/workspace
    ports:
      - "8447:8080"
    networks:
      - ml-net
    labels:
      - "traefik.enable=true"

  # Jupyter instances (one per user)
  jupyter-alice:
    image: jupyter/tensorflow-notebook:latest
    container_name: jupyter-alice
    restart: unless-stopped
    user: "1000:1000"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - GRANT_SUDO=yes
    volumes:
      - /mnt/storage/homes/alice:/home/jovyan/home
      - /mnt/storage/workspaces/alice:/home/jovyan/workspace
      - /mnt/storage/shared:/home/jovyan/shared:ro
    ports:
      - "8888:8888"
    networks:
      - ml-net
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    labels:
      - "traefik.enable=true"

  jupyter-bob:
    image: jupyter/tensorflow-notebook:latest
    container_name: jupyter-bob
    restart: unless-stopped
    user: "1001:1001"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - GRANT_SUDO=yes
    volumes:
      - /mnt/storage/homes/bob:/home/jovyan/home
      - /mnt/storage/workspaces/bob:/home/jovyan/workspace
      - /mnt/storage/shared:/home/jovyan/shared:ro
    ports:
      - "8889:8888"
    networks:
      - ml-net
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    labels:
      - "traefik.enable=true"

  jupyter-charlie:
    image: jupyter/tensorflow-notebook:latest
    container_name: jupyter-charlie
    restart: unless-stopped
    user: "1002:1002"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - GRANT_SUDO=yes
    volumes:
      - /mnt/storage/homes/charlie:/home/jovyan/home
      - /mnt/storage/workspaces/charlie:/home/jovyan/workspace
      - /mnt/storage/shared:/home/jovyan/shared:ro
    ports:
      - "8890:8888"
    networks:
      - ml-net
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    labels:
      - "traefik.enable=true"

  jupyter-dave:
    image: jupyter/tensorflow-notebook:latest
    container_name: jupyter-dave
    restart: unless-stopped
    user: "1003:1003"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - GRANT_SUDO=yes
    volumes:
      - /mnt/storage/homes/dave:/home/jovyan/home
      - /mnt/storage/workspaces/dave:/home/jovyan/workspace
      - /mnt/storage/shared:/home/jovyan/shared:ro
    ports:
      - "8891:8888"
    networks:
      - ml-net
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    labels:
      - "traefik.enable=true"

  jupyter-eve:
    image: jupyter/tensorflow-notebook:latest
    container_name: jupyter-eve
    restart: unless-stopped
    user: "1004:1004"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - GRANT_SUDO=yes
    volumes:
      - /mnt/storage/homes/eve:/home/jovyan/home
      - /mnt/storage/workspaces/eve:/home/jovyan/workspace
      - /mnt/storage/shared:/home/jovyan/shared:ro
    ports:
      - "8892:8888"
    networks:
      - ml-net
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    labels:
      - "traefik.enable=true"

networks:
  ml-net:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
  portainer-data:
  filebrowser-data:
  guacamole-db-data:
